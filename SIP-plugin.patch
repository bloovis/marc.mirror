--- C4/SIP/SIPServer.pm.orig	2025-08-26 13:36:25.000000000 -0700
+++ C4/SIP/SIPServer.pm	2025-09-24 13:54:51.630180590 -0700
@@ -260,6 +260,9 @@
         die "process_request: Bad server connection";
     }
 
+    my $ipaddr = $self->{server}->{client}->peerhost;
+    siplog( 'LOG_DEBUG', "process_request: client IP address = $ipaddr" );
+
     $transport = $transports{ $self->{service}->{transport} };
 
     if ( !defined($transport) ) {
--- C4/SIP/Sip/MsgType.pm.orig	2025-08-26 13:36:25.000000000 -0700
+++ C4/SIP/Sip/MsgType.pm	2025-09-24 15:48:19.662979996 -0700
@@ -23,6 +23,7 @@
 use Koha::Patrons;
 use Koha::Patron::Attributes;
 use Koha::Plugins;
+use Koha::Plugins::Handler;
 use Koha::Items;
 use Koha::DateUtils qw( output_pref );
 
@@ -523,6 +524,28 @@
     return $resp;
 }
 
+# Return true if the patron is valid for the particular client
+# that issued the SIP2 request.
+
+sub check_patron {
+    my ( $patron, $server ) = @_;
+
+    if ( $patron ) {
+        my $plugin_class = $server->{account}->{plugin_class};
+        if ($plugin_class) {
+	   siplog( 'LOG_DEBUG', "check_patron: calling sip2_validate_patron" );
+           return Koha::Plugins::Handler->run({
+                   class  => $plugin_class,
+                   method => 'sip2_validate_patron',
+                   params => { patron => $patron, server => $server },
+               });
+        } else {
+	   siplog( 'LOG_DEBUG', "check_patron: couldn't find plugin class '%s'", $plugin_class );
+        }     
+    }
+    return 1;
+}
+
 sub handle_patron_status {
     my ( $self, $server ) = @_;
     my $ils = $server->{ils};
@@ -538,6 +561,7 @@
         my $koha_patron = Koha::Patrons->find( $patron->{borrowernumber} );
         $koha_patron->update_lastseen('connection');
     }
+    $patron = undef unless ( check_patron ( $patron, $server ) );
     $resp = build_patron_status( $patron, $lang, $fields, $server );
     $self->write_msg( $resp, $server );
     return (PATRON_STATUS_REQ);
@@ -821,6 +845,7 @@
 
     $ils->check_inst_id( $inst_id, "block_patron" );
     $patron = $ils->find_patron($patron_id);
+    $patron = undef unless ( check_patron ( $patron, $server ) );
 
     # The correct response for a "Block Patron" message is a
     # "Patron Status Response", so use that handler to generate
@@ -1056,6 +1081,7 @@
     Koha::Plugins->call( 'patron_barcode_transform', \$patron_id );
 
     $patron = $ils->find_patron($patron_id);
+    $patron = undef unless ( check_patron ( $patron, $server ) );
 
     $resp = (PATRON_INFO_RESP);
     if ($patron) {
